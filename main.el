(global-set-key (kbd "C-x C-j") 'odo-init)

(defun odo-init ()
  "Initialize a new project with odo"
  (interactive)
  (setq files (directory-files "."))
  (if (member "devfile.yaml" files)
      (message "devfile already exists")
    (if (equal files '("." ".."))
	(message "empty: TODO")
      (odo-alizer))
    )
  )

(defun odo-alizer ()
  "Run odo alizer command"
  (interactive)
  (setq temp-buffer "#temp-alizer")
  (kill-buffer temp-buffer)
  (setq result (call-process "odo" nil temp-buffer nil "alizer" "-o" "json"))
  (if (= result 0)
      (progn
	(set-buffer temp-buffer)
	(goto-char (point-min))
	(setq res (json-parse-buffer))
	(setq devfile (gethash "devfile" res))
	(setq registry (gethash "devfile-registry" res))
	(setq msg (format "The devfile '%s' from the registry '%s' will be downloaded. Continue? " devfile registry))
	(if (yes-or-no-p msg)
	    (progn
	      (setq name (read-string "Component name: " (format "my-%s-app" devfile)))
	      (erase-buffer)
	      (if (= 0 (call-process "odo" nil temp-buffer nil "init" "--name" name "--devfile" devfile "--devfile-registry" registry "-o" "json"))
		  (progn
		    (goto-char (point-min))
		    (setq res (json-parse-buffer))
		    (message "devfile downloaded in %s" (gethash "devfile-path" res))
		    )
		(message "cancel")
		))
	  )
	(kill-buffer temp-buffer)
	)
    (message "error")
    )
  )
